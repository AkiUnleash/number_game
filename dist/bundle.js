(()=>{"use strict";class t{constructor(t,e){this.hostElement=document.getElementById(e),this.templateElement=document.getElementById(t);const s=document.importNode(this.templateElement.content,!0);this.element=s.firstElementChild,this.attach()}attach(){this.hostElement.insertAdjacentElement("beforeend",this.element)}}class e{constructor(){this.listeners=[],this.state={question:[],point:[]}}static getInstance(){return e._instance||(e._instance=new e),e._instance}addListener(t){this.listeners.push(t)}setQuestion(){let t=Math.floor(1e5*Math.random()-1).toString();this.state.question=t.toString().split("");for(const t of this.listeners)console.log(this.listeners),t(this.state.question.slice())}getQuestion(){return this.state.question}checkTheAnswer(t){if(t===this.state.question[0]?(this.state.question.shift(),this.state.point.push(10)):this.state.point.push(-10),0===this.state.question.length)this.setQuestion(),this.state.point.push(90);else for(const t of this.listeners)t(this.state.question.slice());console.log(this.state.point)}}const s=e.getInstance();class n extends t{constructor(t){super("number-button","app"),this.acrivenumber=t,this.assignedState=[],s.addListener((t=>{this.assignedState=t,this.renderQuestion()})),this.configure()}renderQuestion(){const t=document.getElementById("Question_no");t.textContent="";for(const e of this.assignedState){const s=document.createElement("div");s.textContent=e,t.appendChild(s)}}configure(){this.element.addEventListener("click",this.submitHandler.bind(this)),this.element.value=this.acrivenumber.toString()}submitHandler(t){t.preventDefault(),s.checkTheAnswer(this.element.value)}}class i extends t{constructor(){super("question","app"),s.setQuestion(),this.renderContent()}configure(){}renderContent(){const t=s.getQuestion(),e=document.getElementById("Question_no");e.textContent="";for(const s of t){const t=document.createElement("div");t.textContent=s,e.appendChild(t)}}}new class extends t{constructor(){super("start-button","app"),this.configure()}configure(){this.element.addEventListener("click",this.clickHandler.bind(this))}clickHandler(t){t.preventDefault(),this.element.remove(),new i;for(const t of this.arrayshuffle([...Array(10)].map(((t,e)=>e))))new n(t)}arrayshuffle(t){for(let e=t.length;1<e;e--){const s=Math.floor(Math.random()*e);[t[s],t[e-1]]=[t[e-1],t[s]]}return t}}})();